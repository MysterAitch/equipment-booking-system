@page "{id:guid}"
@model EquipmentBookingSystem.Website.Pages.Items.EditModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Item</h4>
<hr/>
<div class="row">
    <div class="col-12">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div asp-validation-summary="All" class="text-danger"></div>
            <input type="hidden" asp-for="Data.ItemId"/>

            <div class="row">
                <div class="col-12">
                    <div class="form-group" id="identifiers">

                        @for(int i = 0; i < Model.Data.OrderedIdentifiers.Count; i++)
                        {
                            <div class="identifier-block form-group mb-4">
                                @* Only include the Id value here for pre-existing values *@
                                <input asp-for="@Model.Data.OrderedIdentifiers[i].Id" type="hidden"/>

                                @*Two columns*@
                                <div class="row">
                                    <div class="col-md-4">
                                        <label asp-for="@Model.Data.OrderedIdentifiers[i].Type" class="control-label">Type</label>
                                        <input asp-for="@Model.Data.OrderedIdentifiers[i].Type" class="form-control"/>
                                        <span asp-validation-for="@Model.Data.OrderedIdentifiers[i].Type" class="text-danger"></span>
                                    </div>
                                    <div class="col-md-8">
                                        <label asp-for="@Model.Data.OrderedIdentifiers[i].Value" class="control-label">Value</label>
                                        <input asp-for="@Model.Data.OrderedIdentifiers[i].Value" class="form-control"/>
                                        <span asp-validation-for="@Model.Data.OrderedIdentifiers[i].Value" class="text-danger"></span>
                                    </div>
                                </div>

                                @*three columns*@
                                <div class="row">
                                    <div class="col-md-4">
                                        <label asp-for="@Model.Data.OrderedIdentifiers[i].From" class="control-label">From</label>
                                        <input asp-for="@Model.Data.OrderedIdentifiers[i].From" class="form-control"/>
                                        <span asp-validation-for="@Model.Data.OrderedIdentifiers[i].From" class="text-danger"></span>
                                    </div>
                                    <div class="col-md-4">
                                        <label asp-for="@Model.Data.OrderedIdentifiers[i].To" class="control-label">To</label>
                                        <input asp-for="@Model.Data.OrderedIdentifiers[i].To" class="form-control"/>
                                        <span asp-validation-for="@Model.Data.OrderedIdentifiers[i].To" class="text-danger"></span>
                                    </div>
                                    <div class="col-md-4">
                                        <button type="button" class="btn btn-danger" onclick="removeIdentifier(this)">Remove Identifier</button>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                    <div class="row">
                        <div class="col-md-4">
                            <button type="button" class="btn btn-secondary" onclick="addIdentifier()">Add Identifier</button>
                        </div>
                    </div>

                    <script>
                        function addIdentifier() {
                            const idBlock = document.createElement('div');
                            idBlock.className = 'identifier-block form-group';

                            const existingCount = document.getElementById('identifiers')
                                .querySelectorAll('.identifier-block')
                                .length;

                            const createInputField = (name) => {
                                const label = document.createElement('label');
                                label.textContent = `${name.charAt(0).toUpperCase()}${name.slice(1)}:`;

                                // Deliberately do not handle the ID value here, as this should be a new value
                                const idInput = document.createElement('input');
                                idInput.type = name === 'From' || name === 'To' ? 'date' : 'text';
                                idInput.name = `OrderedIdentifiers[${existingCount}].${name}`; // this format helps to bind array of inputs on the server side
                                idInput.className = 'form-control';

                                if(name === "From") {
                                    // set today's date
                                    idInput.value = new Date().toISOString().split('T')[0];
                                }

                                idBlock.appendChild(label);
                                idBlock.appendChild(idInput);
                            };

                            ['Type', 'Value', 'From', 'To'].forEach(createInputField);

                            const idButton = document.createElement('button');
                            idButton.type = 'button';
                            idButton.innerText = 'Remove';
                            idButton.className = 'btn btn-danger';
                            idButton.onclick = function() {
                                removeIdentifier(this);
                            };

                            idBlock.appendChild(idButton);

                            document.getElementById('identifiers').appendChild(idBlock);
                        }

                        function removeIdentifier(button) {
                            // first ancestor with class identifier-block
                            const containerBlock = button.closest('.identifier-block');

                            // remove container element from it's parent
                            const idBlock = containerBlock.parentNode;
                            idBlock.removeChild(containerBlock);
                        }
                    </script>

                </div>
            </div>

            <div class="row mt-4">
                <div class="col-md-4">

                    <div class="form-group">
                        <label asp-for="Data.Manufacturer" class="control-label"></label>
                        <input asp-for="Data.Manufacturer" class="form-control"/>
                        <span asp-validation-for="Data.Manufacturer" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Data.Model" class="control-label"></label>
                        <input asp-for="Data.Model" class="form-control"/>
                        <span asp-validation-for="Data.Model" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <div class="row mt-4">
                <div class="col-md-12">
                    <div class="form-group">
                        <label asp-for="Data.DamageNotes" class="control-label"></label>
                        <textarea asp-for="Data.DamageNotes" class="form-control" rows="7"></textarea>
                        <span asp-validation-for="Data.DamageNotes" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Data.Notes" class="control-label"></label>
                        <textarea asp-for="Data.Notes" class="form-control" rows="7"></textarea>
                        <span asp-validation-for="Data.Notes" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <div class="row mt-4">
                <div class="col-md-4">
                    <div class="form-group">
                        <input type="submit" value="Save" class="btn btn-primary"/>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="./Details" asp-route-id="@Model.Data.ItemId">Back to item details</a> |
    <a asp-page="./Index">Back to List</a>
</div>
