@page
@using Humanizer
@model EquipmentBookingSystem.Website.Pages.Items.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<table class="table">
    <thead>
    <tr>
        <th>
            Manufacturer
        </th>
        <th>
            Model
        </th>
        <th>
            Serial Number
        </th>
        <th>
            ProCloud Asset ID
        </th>
        <th>
            Call Sign
        </th>
        <th>
            ISSI
        </th>
        <th>
            All Identifiers
        </th>
        <th>
            Next Booking
        </th>
        <th>Actions</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.Item)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Manufacturer)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Model)
            </td>
            <td>

                @{
                    var serialNumberCount = item.CurrentSerialNumbers.Count();
                    switch (serialNumberCount)
                    {
                        case 0:
                            <small class="fw-lighter text-secondary">No <em>current</em> serial number</small>
                            break;
                        case 1:
                            @item.CurrentSerialNumbers.First().Value
                            break;
                        case > 1:
                        {
                            <p>
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-exclamation-triangle" viewBox="0 0 16 16">
                                    <path d="M7.938 2.016A.13.13 0 0 1 8.002 2a.13.13 0 0 1 .063.016.15.15 0 0 1 .054.057l6.857 11.667c.036.06.035.124.002.183a.2.2 0 0 1-.054.06.1.1 0 0 1-.066.017H1.146a.1.1 0 0 1-.066-.017.2.2 0 0 1-.054-.06.18.18 0 0 1 .002-.183L7.884 2.073a.15.15 0 0 1 .054-.057m1.044-.45a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767z"/>
                                    <path d="M7.002 12a1 1 0 1 1 2 0 1 1 0 0 1-2 0M7.1 5.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0z"/>
                                </svg>
                                Multiple <em>current</em> serial numbers found:
                            </p>
                            <ul>
                                @foreach (var serialNumber in item.CurrentSerialNumbers)
                                {
                                    <li>@serialNumber</li>
                                }
                            </ul>
                            break;
                        }
                    }
                }
            </td>
            <td>
                @{
                    var currentProCloudAssetIdCount = item.CurrentProCloudAssetIds.Count();
                    switch (currentProCloudAssetIdCount)
                    {
                        case 0:
                            <small class="fw-lighter text-secondary">No <em>current</em> ProCloud Asset ID</small>
                            break;
                        case 1:
                            @item.CurrentProCloudAssetIds.First().Value
                            break;
                        case > 1:
                        {
                            <p>
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-exclamation-triangle" viewBox="0 0 16 16">
                                    <path d="M7.938 2.016A.13.13 0 0 1 8.002 2a.13.13 0 0 1 .063.016.15.15 0 0 1 .054.057l6.857 11.667c.036.06.035.124.002.183a.2.2 0 0 1-.054.06.1.1 0 0 1-.066.017H1.146a.1.1 0 0 1-.066-.017.2.2 0 0 1-.054-.06.18.18 0 0 1 .002-.183L7.884 2.073a.15.15 0 0 1 .054-.057m1.044-.45a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767z"/>
                                    <path d="M7.002 12a1 1 0 1 1 2 0 1 1 0 0 1-2 0M7.1 5.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0z"/>
                                </svg>
                                Multiple <em>current</em> ProCloud asset IDs found:
                            </p>
                            <ul>
                                @foreach (var proCloudAssetId in item.CurrentProCloudAssetIds)
                                {
                                    <li>@proCloudAssetId</li>
                                }
                            </ul>
                            break;
                        }
                    }
                }
            </td>
            <td>
                @{
                    var callSignCount = item.CurrentCallSigns.Count();
                    switch (callSignCount)
                    {
                        case 0:
                            <small class="fw-lighter text-secondary">No <em>current</em> Call Sign</small>
                            break;
                        case 1:
                            @item.CurrentCallSigns.First().Value
                            break;
                        case > 1:
                        {

                            <p>
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-exclamation-triangle" viewBox="0 0 16 16">
                                    <path d="M7.938 2.016A.13.13 0 0 1 8.002 2a.13.13 0 0 1 .063.016.15.15 0 0 1 .054.057l6.857 11.667c.036.06.035.124.002.183a.2.2 0 0 1-.054.06.1.1 0 0 1-.066.017H1.146a.1.1 0 0 1-.066-.017.2.2 0 0 1-.054-.06.18.18 0 0 1 .002-.183L7.884 2.073a.15.15 0 0 1 .054-.057m1.044-.45a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767z"/>
                                    <path d="M7.002 12a1 1 0 1 1 2 0 1 1 0 0 1-2 0M7.1 5.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0z"/>
                                </svg>
                                Multiple <em>current</em> call signs found:
                            </p>
                            <ul>
                                @foreach (var callSign in item.CurrentCallSigns)
                                {
                                    <li>@callSign.Value</li>
                                }
                            </ul>
                            break;
                        }
                    }
                }
            </td>
            <td>
                @{
                    var issiCount = item.CurrentIssis.Count();
                    switch(issiCount)
                    {
                        case 0:
                            <small class="fw-lighter text-secondary">No <em>current</em> ISSI</small>
                            break;
                        case 1:
                            @item.CurrentIssis.First().Value
                            break;
                        case > 1:
                        {
                            <p>
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-exclamation-triangle" viewBox="0 0 16 16">
                                    <path d="M7.938 2.016A.13.13 0 0 1 8.002 2a.13.13 0 0 1 .063.016.15.15 0 0 1 .054.057l6.857 11.667c.036.06.035.124.002.183a.2.2 0 0 1-.054.06.1.1 0 0 1-.066.017H1.146a.1.1 0 0 1-.066-.017.2.2 0 0 1-.054-.06.18.18 0 0 1 .002-.183L7.884 2.073a.15.15 0 0 1 .054-.057m1.044-.45a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767z"/>
                                    <path d="M7.002 12a1 1 0 1 1 2 0 1 1 0 0 1-2 0M7.1 5.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0z"/>
                                </svg>
                                Multiple <em>current</em> ISSIs found:
                            </p>
                            <ul>
                                @foreach (var identifier in item.CurrentIssis)
                                {
                                    <li>@identifier.Value</li>
                                }
                            </ul>
                            break;
                        }
                    }
                }
            </td>
            <td>
                <ul>
                    @foreach (var identifier in item.CurrentIdentifiers.OrderBy(x => x.Type))
                    {
                        <li>@identifier.Type: <code title="From: @(identifier.From?.Date.ToString() ?? "Not set") ; To: @(identifier.To?.Date.ToString() ?? "Not set")">@identifier.Value</code></li>
                    }
                </ul>
            </td>

            <td>
                @{
                    var futureBookings = item.Bookings
                        .Where(x => x.BookingStart > DateTime.Now)
                        .OrderBy(x => x.BookingStart)
                        .ToList();
                }
                @if (futureBookings.Any())
                {
                    var nextBooking = futureBookings.First();
                    var duration = nextBooking.BookingEnd - nextBooking.BookingStart;
                    <span>
                        <a asp-area="" asp-page="/Bookings/Details" asp-route-id="@nextBooking.Id">
                            @nextBooking.BookingStart.ToString("ddd dd/MM/yyyy") to @nextBooking.BookingEnd.ToString("ddd dd/MM/yyyy")
                        </a>
                        <br/>
                        <small>(approx. @duration.Humanize(2))</small>
                        <br/>
                        <small>for @nextBooking.BookedFor</small>
                    </span>

                }
                else
                {
                    <small class="fw-lighter text-secondary">No upcoming bookings</small>
                }
            </td>

            <td>
                <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
    }
    </tbody>
</table>
